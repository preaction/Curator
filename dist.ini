name                = Curator
main_module         = lib/Curator.pod
author              = Doug Bell <preaction@cpan.org>
license             = Perl_5
copyright_holder    = Doug Bell
copyright_year      = 2013

[Authority]
authority  = cpan:PREACTION
do_munging = 0

[MetaResources]
homepage                = https://github.com/preaction/Curator
repository.web          = https://github.com/preaction/Curator
repository.url          = https://github.com/preaction/Curator.git
bugtracker.web          = https://github.com/preaction/Curator/issues
repository.type         = git

; --- Module management
[@Filter]
-bundle = @Basic
; GatherDir must be configured separately
-remove = GatherDir
-remove = Readme

[Readme::Brief]
[ReadmeAnyFromPod]
location = root
filename = README.mkdn
type = markdown

[PodWeaver]
replacer = replace_with_comment
post_code_replacer = replace_with_nothing
[PkgVersion]
die_on_line_insertion = 1
[CPANFile]
[MetaJSON]
[Git::Contributors]
; authordep Pod::Weaver::Section::Contributors
[Test::ReportPrereqs]
[Test::Compile]

; --- Repository management
[Git::GatherDir]
include_dotfiles = 1
prune_directory = ^eg
; Exclude dotfiles in the root directory
exclude_match = ^\.[^/]+$
; Exclude ini files in the root directory
exclude_match = ^[^/]+\.ini$
; Exclude generated root content, which is included by the various plugins
; Without this, we get an error about duplicate content
exclude_filename = cpanfile
exclude_filename = INSTALL
exclude_filename = LICENSE
exclude_filename = CHANGES
exclude_filename = README
exclude_filename = README.mkdn
exclude_filename = Makefile.PL

[ChangelogFromGit::CPAN::Changes]
; Create a changelog from the git repository commits
; The changelog will contain the short description of the change
file_name = CHANGES
show_author = 0


[CopyFilesFromBuild]
; Copy generated content to the repository root so users without Dist::Zilla
; can use it
copy = cpanfile
copy = INSTALL
copy = LICENSE
copy = CHANGES
copy = Makefile.PL

[Run::AfterBuild]
; Add travis and coveralls badges to README.mkdn
run = perl -pi -e 's{(# SYNOPSIS)}{# STATUS\n\n<a href="https://travis-ci.org/preaction/Statocles"><img src="https://travis-ci.org/preaction/Statocles.svg?branch=master"></a><a href="https://coveralls.io/r/preaction/Statocles"><img src="https://coveralls.io/repos/preaction/Statocles/badge.png" alt="Coverage Status" /></a>\n\n$1}' README.mkdn

; --- Git management
[Git::NextVersion]
[@Git]
; Automatically commit these files during release
changelog = CHANGES
allow_dirty_match = README.*
allow_dirty_match = .*[.]PL
allow_dirty = INSTALL
allow_dirty = LICENSE
allow_dirty = CHANGES
allow_dirty = cpanfile
; Automatically commit with release version and changelog
commit_msg = release v%v%n%n%c
tag_message = %N v%v - %{yyyy-MM-dd}d%n%n%c ; Tag annotations show up in github release list

; --- Project-specific directives
[Prereqs]
perl = 5.010
Import::Into = 0
Module::Runtime = 0
Moo = 0
MooX::Types::MooseLike = 0
Data::UUID = 1.218
IO::CaptureOutput = 0
Archive::Zip = 0
Archive::Rar = 0
XML::LibXML = 0
Imager = 0
Imager::File::JPEG = 0
MP4::Info = 0

[Prereqs / TestRequires]
Test::Compile = 0
Test::Most = 0
Test::Import = 0
